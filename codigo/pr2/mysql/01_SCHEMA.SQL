CREATE TABLE AUTONOMOUS_REGION (
  	   ID_AUTONOMOUS_REGION         NUMBER(2) 		  	NOT NULL,
 	   AUTONOMOUS_REGION 			VARCHAR2(27 CHAR) 	NOT NULL
);
CREATE TABLE PROVINCE (
  	   ID_PROVINCE          		NUMBER(2) 		  	NOT NULL,
  	   PROVINCE             		VARCHAR2(22 CHAR) 	NOT NULL,
  	   POSTAL_CODE_PREFIX   		VARCHAR2(2 CHAR)  	NULL,
  	   ID_AUTONOMOUS_REGION 		NUMBER(2) 		  	NOT NULL
);
CREATE TABLE ROAD_TYPE (
  	   ID_ROAD_TYPE 				NUMBER(3) 		  	NOT NULL,
  	   ROAD_TYPE 					VARCHAR2(14 CHAR) 	NOT NULL,
  	   ABBREVIATION					VARCHAR2(14 CHAR)   NOT NULL
);
CREATE TABLE CIF (
       ID_CIF 						NUMBER(10) 		   	NOT NULL,
       CIF 							VARCHAR2(9) 	   	NOT NULL,
       CREATED_DATE 				DATE			   	NOT NULL,
       CREATED_BY 					VARCHAR2(50 CHAR)  	NOT NULL,
       UPDATED_DATE 				DATE 			   	NOT NULL,
       UPDATED_BY 					VARCHAR2(50 CHAR) 	NOT NULL,
       FISCAL_NAME 					VARCHAR2(100 CHAR) 	NOT NULL,
       FP_NAME 						VARCHAR2(50 CHAR)  	NOT NULL,
       FP_LASTNAME_1 				VARCHAR2(50 CHAR)  	NOT NULL,
       FP_LASTNAME_2 				VARCHAR2(50 CHAR)  	NULL,
       FP_EMAIL 					VARCHAR2(100 CHAR) 	NOT NULL,
       FP_EMAIL2 					VARCHAR2(500 CHAR) 	NULL,
       FP_PHONE 					NUMBER(9) 		   	NOT NULL,
       FP_PHONE2 					NUMBER(9) 		   	NULL,
       CC 							VARCHAR2(50 CHAR)  	NULL,
       LOCAL 						VARCHAR2(25 CHAR)  	NULL,
       ID_ROAD_TYPE					NUMBER(3) 		   	NOT NULL,
       ROAD_NUMBER 					VARCHAR2(10 CHAR)   NULL,
       ROAD_NAME 					VARCHAR2(75 CHAR)  	NOT NULL,
       BUILDING 					VARCHAR2(25 CHAR) 	NULL,
       STAIRS 						VARCHAR2(2 CHAR)   	NULL,
       PORTAL 						VARCHAR2(6 CHAR)   	NULL,
       FLOOR 						VARCHAR2(12 CHAR)  	NULL,
       DOOR 						VARCHAR2(10 CHAR)   NULL,
       POSTAL_CODE 					VARCHAR2(5 CHAR)   	NOT NULL,
       CITY 						VARCHAR2(50 CHAR)  	NOT NULL,
       ID_PROVINCE 					NUMBER(2)          	NOT NULL,
       TRANSITO						NUMBER(10)			NULL,
       DISABLED 					CHAR(1) DEFAULT 0,
       DISABLED_DATE 				DATE 			   	NULL
);
CREATE TABLE CIF_AUDIT (
       ID_CIF_AUDIT 				NUMBER(10)          NOT NULL,
       CIF_ID 						VARCHAR2(9 CHAR)    NOT NULL,
       DESCRIPTION					VARCHAR2(250 CHAR)  NOT NULL,
       OLD_VALUE 					VARCHAR2(1000 CHAR) NOT NULL,
       NEW_VALUE 					VARCHAR2(1000 CHAR) NOT NULL,
       CREATED_DATE 				DATE 				NOT NULL,
       CREATED_BY 					VARCHAR2(50 CHAR) 	NOT NULL
);
CREATE TABLE CANAL (
       ID_CANAL 					NUMBER(10) 			NOT NULL,
       CANAL 						VARCHAR2(50 CHAR)   NOT NULL,
       CREATED_DATE 				DATE 				NOT NULL,
       CREATED_BY 					VARCHAR2(50 CHAR) 	NOT NULL,
       UPDATED_DATE 				DATE 				NOT NULL,
       UPDATED_BY 					VARCHAR2(50 CHAR) 	NOT NULL,
       DISABLED 	   				CHAR(1) DEFAULT 0,
  	   DISABLED_DATE 				DATE 				NULL
);
CREATE TABLE REGION (
       ID_REGION 					NUMBER(10) 			NOT NULL,
       REGION 						VARCHAR2(50 CHAR) 	NOT NULL,
       ID_CANAL 					NUMBER(10) 			NOT NULL,
       CREATED_DATE 				DATE 				NOT NULL,
       CREATED_BY 					VARCHAR2(50 CHAR) 	NOT NULL,
       UPDATED_DATE 				DATE 				NOT NULL,
       UPDATED_BY 					VARCHAR2(50 CHAR) 	NOT NULL,
       ID_MANAGER_REGION			VARCHAR2(50 CHAR) 	NULL,
       REGIONAL_EMAIL 				VARCHAR2(100 CHAR) 	NULL,
       REGIONAL_PHONE 				NUMBER(9) 			NULL,
       DISABLED 	   				CHAR(1) DEFAULT 0,
  	   DISABLED_DATE 				DATE 				NULL
);   
CREATE TABLE AREA (
       ID_AREA 						NUMBER(10)			NOT NULL,
       AREA 						VARCHAR2(50 CHAR) 	NOT NULL,
       ID_REGION 					NUMBER(10) 			NOT NULL,
       CREATED_DATE 				DATE 				NOT NULL,
       CREATED_BY 					VARCHAR2(50 CHAR) 	NOT NULL,
       UPDATED_DATE 				DATE 				NOT NULL,
       UPDATED_BY 					VARCHAR2(50 CHAR) 	NOT NULL,
       ID_AUDITOR_AREA 				VARCHAR2(50 CHAR) 	NULL,
       AUDITOR_EMAIL 				VARCHAR2(100 CHAR) 	NULL,
       AUDITOR_PHONE 				NUMBER(9) 			NULL,
       ID_MANAGER_AREA 				VARCHAR2(50 CHAR) 	NULL,
       MANAGER_EMAIL 				VARCHAR2(100 CHAR) 	NULL,
       MANAGER_PHONE 				NUMBER(9) 			NULL,
       DISABLED 	   				CHAR(1) DEFAULT 0,
  	   DISABLED_DATE 				DATE 				NULL
); 
CREATE TABLE STORE_IP (
      ID           					NUMBER (10) 		NOT NULL,
      STORE_NUMBER 					NUMBER (10) 		NOT NULL,
      IP           					VARCHAR2 (50 CHAR) 	NOT NULL,
      ACTIVE 						NUMBER(1) DEFAULT 1 NULL,
      CREATED_DATE 					DATE 				NOT NULL,
      CREATED_BY   					VARCHAR2 (50 CHAR) 	NOT NULL,
      UPDATED_DATE 					DATE 				NULL,
      UPDATED_BY   					VARCHAR2 (50 CHAR)  NULL
);
CREATE TABLE STORE_IP_AUDIT (
      ID           					NUMBER (10) 		NOT NULL,
      STORE_IP_ID  					NUMBER (10) 		NOT NULL,
      DESCRIPTION  					VARCHAR2(250 CHAR) 	NOT NULL,
      OLD_VALUE    					VARCHAR2(1000 CHAR) NULL,
      NEW_VALUE    					VARCHAR2(1000 CHAR) NULL,
      CREATED_DATE 					DATE 				NOT NULL,
      CREATED_BY   					VARCHAR2 (50 CHAR) 	NOT NULL
);
CREATE TABLE STORE (
	 ID_STORE     					INTEGER 			NOT NULL,
	 STORE_NUMBER 					NUMBER(10) 			NOT NULL,
	 STORE_NAME   					NVARCHAR2(75) 		NOT NULL,
	 ID_STORE_MANAGER 				VARCHAR2(50) 		NULL,
	 ID_CIF       					NUMBER(10) 			NOT NULL,
	 CREATED_DATE 					DATE 				NOT NULL,
	 CREATED_BY   					NVARCHAR2(50) 		NOT NULL,
	 UPDATED_DATE 					DATE 				NOT NULL,
	 UPDATED_BY  					NVARCHAR2(50) 		NOT NULL,
	 COMMERCIAL_NAME				NVARCHAR2(50) 		NULL,
	 CREATION_STORE_DATE			DATE 				NULL,
	 ID_AREA						INTEGER 			NOT NULL,
	 CC								NVARCHAR2(50) 		NULL,
	 LOCAL							NVARCHAR2(25) 		NULL,
	 ID_ROAD_TYPE					NUMBER(3) 			NOT NULL,
	 ROAD_NUMBER					NVARCHAR2(10)		NULL,
	 ROAD_NAME						NVARCHAR2(75) 		NOT NULL,
	 BUILDING						NVARCHAR2(25) 		NULL,
	 STAIRS							NVARCHAR2(2) 		NULL,
	 PORTAL							NVARCHAR2(10) 		NULL,
	 FLOOR							NVARCHAR2(12) 		NULL,
	 DOOR							NVARCHAR2(10) 		NULL,
	 POSTAL_CODE					NVARCHAR2(5) 		NOT NULL,
	 CITY							NVARCHAR2(50) 		NOT NULL,
	 ID_PROVINCE					NUMBER(2) 			NOT NULL,
	 LAND_LINE						NUMBER(9) 			NOT NULL,
	 FAX							NUMBER(9) 			NOT NULL,
	 PHONE							NUMBER(9)  			NOT NULL,
	 EMAIL 							NVARCHAR2(100) 		NOT NULL,
	 ID_TIPOLOGIA					INTEGER 			NULL,
	 DISABLED 	   					CHAR(1) DEFAULT 0,
	 DISABLED_DATE 					DATE 				NULL,
	 DELETED						CHAR(1) DEFAULT 0,		
	 DELETED_DATE					DATE 				NULL
);
CREATE TABLE REASON_TEMPORARY_CLOSURE (
  	 ID_REASON_TEMPORARY_CLOSURE    INTEGER 			NOT NULL,
 	 REASON_TEMPORARY_CLOSURE 		VARCHAR2(50) 		NOT NULL
);
CREATE TABLE STORE_FAMILY (
	 ID_STORE_FAMILY 				INTEGER 			NOT NULL,
	 FAMILY 					  	VARCHAR2(50) 		NOT NULL,
	 DISABLED 				  		CHAR(1) DEFAULT 0	NOT NULL	 
);
CREATE TABLE STORE_ANNEX (
	 ID_STORE_ANNEX 				INTEGER 			NOT NULL,
	 STORE_NUMBER 					NUMBER(10) 			NOT NULL,
	 ID_COORDINATOR 				VARCHAR2(50) 		NULL,
	 COORDINATOR_EMAIL 				VARCHAR2(100 CHAR) 	NULL,
     COORDINATOR_PHONE 				NUMBER(9) 			NULL,
	 ID_AREA_MANAGER 				VARCHAR2(50) 		NULL,
	 AREA_MANAGER_EMAIL 			VARCHAR2(100 CHAR) 	NULL,
     AREA_MANAGER_PHONE 			NUMBER(9) 			NULL,
	 ID_AUDITOR		 				VARCHAR2(50) 		NULL,
	 AUDITOR_EMAIL 					VARCHAR2(100 CHAR) 	NULL,
     AUDITOR_PHONE 					NUMBER(9) 			NULL,
	 CREATED_DATE 					DATE 				NOT NULL,
	 CREATED_BY   					NVARCHAR2(50)		NOT NULL,
	 UPDATED_DATE 					DATE 				NOT NULL,
	 UPDATED_BY  					NVARCHAR2(50) 		NOT NULL,
	 ID_STORE_FAMILY				INTEGER				NULL,
	 LOCATION						VARCHAR2(10)		NULL,
	 PROPERTY_OPENING_DATE			DATE 				NULL,
	 SALES_OPENING_DATE				DATE 				NULL,
	 COMMERCIAL_CLOSING_DATE		DATE 				NULL,
	 SALES_CLOSING_DATE				DATE 				NULL,
	 TEMPORARY_OPENING_DATE			DATE 				NULL,
	 TEMPORARY_CLOSING_DATE			DATE 				NULL,
	 ID_REASON_TEMP_CLOSURE			INTEGER				NULL,
	 OLD_STORE_NUMBER				INTEGER				NULL	
);
CREATE TABLE STORE_LOGISTIC (
 	 ID_LOGISTIC_DATA				INTEGER 			NOT NULL,
	 ID_STORE	   					NUMBER (10)			NOT NULL,
	 HORARIO_LOGISTICO	   			VARCHAR2(255) DEFAULT 0,
	 CENTRO_COSTE					VARCHAR2(255) 		NULL,
	 GRUPOPH	   					INTEGER 			NOT NULL,
	 CC 							VARCHAR2(50 CHAR)	NULL,
     LOCAL 							VARCHAR2(25 CHAR)	NULL,
     ID_ROAD_TYPE					NUMBER(3) 			NOT NULL,
     ROAD_NUMBER 					VARCHAR2(10 CHAR) 	NULL,
     ROAD_NAME 						VARCHAR2(75 CHAR) 	NOT NULL,
     BUILDING 						VARCHAR2(25 CHAR)	NULL,
     STAIRS 						VARCHAR2(2 CHAR)	NULL,
     PORTAL 						VARCHAR2(10 CHAR)	NULL,
     FLOOR 							VARCHAR2(12 CHAR)	NULL,
     DOOR 							VARCHAR2(10 CHAR)	NULL,
     POSTAL_CODE 					VARCHAR2(5 CHAR) 	NOT NULL,
     CITY 							VARCHAR2(50 CHAR) 	NOT NULL,
     ID_PROVINCE 					NUMBER(2) 			NOT NULL,
     ID_OPERADOR_LOGISTICO			INTEGER 			NOT NULL,
     ID_TIPO_CATALOGO				INTEGER 			NULL,
     ID_TIPOLOGIA_LOGISTICA			INTEGER 			NOT NULL,
     ID_TIPO_RECOGIDA				INTEGER 			NOT NULL,
     ID_RECOGIDA_ESPECIAL			INTEGER 			NOT NULL,     
     CREATED_DATE 					DATE 				NOT NULL,
	 CREATED_BY   					VARCHAR2(50) 		NOT NULL,
	 UPDATED_DATE 					DATE 				NOT NULL,
	 UPDATED_BY   					VARCHAR2(50) 		NOT NULL,
     ENABLED 						INTEGER DEFAULT 0   NOT NULL,
     DISABLED_DATE 					DATE 				NULL,
     ID_MIRROR_STORE			    INTEGER 			NULL,
     ID_RUTA_LOGISTICA			    INTEGER 			NULL,
     PASSWORD						VARCHAR2(15) 		NULL,
     ENTREGA_SABADO_ENABLE			INTEGER DEFAULT 0   NOT NULL
);
CREATE TABLE OPERADOR_LOGISTICO (
 	 ID_OPERADOR_LOGISTICO			INTEGER 			NOT NULL,
	 OPERADOR_LOGISTICO				VARCHAR2(50)		NOT NULL
);
CREATE TABLE TIPO_CATALOGO (
 	 ID_TIPO_CATALOGO				INTEGER 			NOT NULL,
	 TIPO_CATALOGO					VARCHAR2(50) 		NOT NULL
);
CREATE TABLE TIPOLOGIA_LOGISTICA (
 	 ID_TIPOLOGIA_LOGISTICA			INTEGER 			NOT NULL,
	 TIPOLOGIA_LOGISTICA			VARCHAR2(50)		NOT NULL
);
CREATE TABLE TIPO_RECOGIDA (
 	 ID_TIPO_RECOGIDA				INTEGER 			NOT NULL,
	 TIPO_RECOGIDA					VARCHAR2(50) 		NOT NULL
);
CREATE TABLE RECOGIDA_ESPECIAL (
 	 ID_RECOGIDA_ESPECIAL			INTEGER 			NOT NULL,
	 RECOGIDA_ESPECIAL				VARCHAR2(50) 		NOT NULL
);
CREATE TABLE RUTA_LOGISTICA (
 	 ID_RUTA_LOGISTICA				INTEGER 			NOT NULL,
	 RUTA_LOGISTICA					VARCHAR2(50) 		NOT NULL
);
CREATE TABLE PERSONA (
 	 ID_PERSONA						INTEGER 			NOT NULL,
	 NOMBRE							VARCHAR2(100) 		NOT NULL,
	 USUARIO						VARCHAR2(50) 		NOT NULL,
	 ACTIVA							INTEGER 			NOT NULL,
	 FECHA							DATE				NULL
);
CREATE TABLE STORE_GPS (
	ID_STORE_GPS					INTEGER 			NOT NULL,
	ID_STORE						INTEGER 			NOT NULL,
	STORE_NUMBER					INTEGER 			NOT NULL,
	LATITUDE						VARCHAR2(50) 		NULL,
	LONGITUDE						VARCHAR2(50) 		NULL,
	GOOGLE_URL						VARCHAR2(1000) 		NULL,
	CREATED_DATE 					DATE 				NOT NULL,
	CREATED_BY   					VARCHAR2(50) 		NOT NULL,
	UPDATED_DATE 					DATE 				NOT NULL,
	UPDATED_BY   					VARCHAR2(50) 		NOT NULL
);
CREATE TABLE STORE_GPS_AUDIT (
	ID_STORE_GPS_AUDIT				INTEGER 			NOT NULL,
	ID_STORE_GPS					INTEGER 			NOT NULL,
	DESCRIPTION						VARCHAR2(250) 		NULL,
	OLD_VALUE						VARCHAR2(1000) 		NULL,
	NEW_VALUE						VARCHAR2(1000) 		NULL,
	CREATED_DATE 					DATE 				NOT NULL,
	CREATED_BY   					VARCHAR2(50) 		NOT NULL
);
CREATE TABLE STORE_FRANCHISES (
	ID_FRANCHISES_DATA 				INTEGER 			NOT NULL,
  	STORE_NUMBER 					INTEGER 			NOT NULL,
	ROYALTY_DATE 					DATE 				NOT NULL,
	CUSTOMER_CODE 					VARCHAR2(10)		NULL,
	PROVIDER_CODE 					VARCHAR2(10) 		NULL,
	BANK_ACCOUNT 					VARCHAR2(29) 		NOT NULL,
	WARRANTY						NUMBER(10,2)		NULL,
	BALANCE_BLOCK					NUMBER(1,0)			NULL,
	AR_OSWIN						VARCHAR2(12) 		NULL,
	AP_OSWIN						VARCHAR2(12) 		NULL,
	CREATED_DATE 					DATE 				NOT NULL,
	CREATED_BY   					VARCHAR2(50) 		NOT NULL,
	UPDATED_DATE 					DATE 				NOT NULL,
	UPDATED_BY 						VARCHAR2(50)		NOT NULL 
);
CREATE TABLE STORE_FRANCHISES_AUDIT (
	ID_FRANCHISES_DATA_AUDIT		INTEGER 			NOT NULL,
	ID_FRANCHISES_DATA				INTEGER 			NOT NULL,
	DESCRIPTION						VARCHAR2(250) 		NULL,
	OLD_VALUE						VARCHAR2(1000) 		NULL,
	NEW_VALUE						VARCHAR2(1000) 		NULL,
	CREATED_DATE 					DATE 				NOT NULL,
	CREATED_BY   					VARCHAR2(50) 		NOT NULL
);
CREATE TABLE STORE_SCHEDULER (
	ID_SCHEDULER 					INTEGER 			NOT NULL,
	STORE_NUMBER 					INTEGER 			NOT NULL,
	SUNDAY_SCHEDULER				VARCHAR2(255)		NULL,
	MONDAY_SCHEDULER				VARCHAR2(255)		NULL,
	TUESDAY_SCHEDULER				VARCHAR2(255)		NULL,
	WEDNESDAY_SCHEDULER				VARCHAR2(255)		NULL,
	THURSDAY_SCHEDULER				VARCHAR2(255)		NULL,
	FRIDAY_SCHEDULER				VARCHAR2(255)		NULL,
	SATURDAY_SCHEDULER				VARCHAR2(255)		NULL,
	SPECIAL_SCHEDULER				VARCHAR2(255)		NULL,	
	RESUMIDO_SCHEDULER				VARCHAR2(255)		NULL,	
	CREATED_DATE 					DATE 				NOT NULL,
    CREATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL,
    UPDATED_DATE 					DATE 				NOT NULL,
    UPDATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL
);
CREATE TABLE STORE_SCHEDULER_AUDIT (
	ID_STORE_SCHEDULER_AUDIT		INTEGER 			NOT NULL,
	ID_SCHEDULER					INTEGER 			NOT NULL,
	DESCRIPTION						VARCHAR2(250) 		NULL,
	OLD_VALUE						VARCHAR2(1000) 		NULL,
	NEW_VALUE						VARCHAR2(1000) 		NULL,
	CREATED_DATE 					DATE 				NOT NULL,
	CREATED_BY   					VARCHAR2(50) 		NOT NULL
);
CREATE TABLE STORE_SYS_DEVICE_TYPE (
	ID								NUMBER(10)			NOT NULL,
	NAME 							VARCHAR (50) 		NOT NULL,
	GROUP_NAME 						VARCHAR (50) 		NULL,
	DEVICE_TYPE 					VARCHAR (50) 		NOT NULL,
	CREATED_DATE 					DATE 				NOT NULL,
	CREATED_BY   					VARCHAR2(50)		NOT NULL,
	UPDATED_DATE 					DATE 				NULL,
	UPDATED_BY  					VARCHAR2(50) 		NULL
);
CREATE TABLE STORE_SYS_DEVICE (
	ID								NUMBER(10)			NOT NULL,
	STORE_NUMBER 					NUMBER (10) 		NOT NULL,
	NAME 							VARCHAR (50) 		NULL,
	TYPE_ID 						NUMBER (10) 		NOT NULL,
	VALUE 							VARCHAR (50) 		NOT NULL,
	PRINCIPAL	 					NUMBER (1) DEFAULT 0 NOT NULL,
	CREATED_DATE 					DATE 				NOT NULL,
	CREATED_BY   					VARCHAR2(50)		NOT NULL,
	UPDATED_DATE 					DATE 				NULL,
	UPDATED_BY  					VARCHAR2(50) 		NULL
);
CREATE TABLE PAYMENT_ACCOUNT_TYPE (
    ID_PAYMENT_ACCOUNT_TYPE        	INTEGER 			NOT NULL,
    PAYMENT_ACCOUNT_TYPE            VARCHAR2(15) 		NOT NULL
);
CREATE TABLE PAYMENT_METHOD (
	ID_PAYMENT_METHOD				INTEGER				NOT NULL,
	PAYMENT_METHOD					VARCHAR2(50 CHAR) 	NOT NULL,
	DESCRIPTION						VARCHAR2(50 CHAR)	NOT NULL,
	EXACT_AMOUNT					number(1,0)			NULL,
	ID_PAYMENT_ACCOUNT_TYPE			INTEGER				NULL,
	CREATED_DATE 					DATE 				NOT NULL,
    CREATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL,
    UPDATED_DATE 					DATE 				NOT NULL,
    UPDATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL,
    DISABLED 	   					CHAR(1) DEFAULT 0,
  	DISABLED_DATE 					DATE 				NULL,
  	CC								VARCHAR2(10 CHAR)	NOT NULL
);
CREATE TABLE PAYMENT_GROUP (
	ID_PAYMENT_GROUP				INTEGER				NOT NULL,
	PAYMENT_GROUP					VARCHAR2(50 CHAR)	NOT NULL,
	DESCRIPTION						VARCHAR2(50 CHAR)	NOT NULL,
	CREATED_DATE 					DATE 				NOT NULL,
    CREATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL,
    UPDATED_DATE 					DATE 				NOT NULL,
    UPDATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL,
    DISABLED 	   					CHAR(1) DEFAULT 0,
  	DISABLED_DATE 					DATE 				NULL
);
CREATE TABLE PAYMENT_PALETTE (
	ID_PAYMENT_PALETTE				INTEGER				NOT NULL,
	PAYMENT_PALETTE					VARCHAR2(50 CHAR)	NOT NULL,
	DESCRIPTION						VARCHAR2(50 CHAR)	NOT NULL,
	CREATED_DATE 					DATE 				NOT NULL,
    CREATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL,
    UPDATED_DATE 					DATE 				NOT NULL,
    UPDATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL,
    DISABLED 	   					CHAR(1) DEFAULT 0,
  	DISABLED_DATE 					DATE 				NULL
);
CREATE TABLE PAYMENT_ASSIGNED (
	ID_PAYMENT_ASSIGNED				INTEGER 			NOT NULL,
	ID_STORE						INTEGER 			NOT NULL,
	ID_PAYMENT_PALETTE				INTEGER 			NOT NULL,
	CREATED_DATE 					DATE 				NOT NULL,
    CREATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL,
    UPDATED_DATE 					DATE 				NOT NULL,
    UPDATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL,
    DISABLED 	   					CHAR(1) DEFAULT 0,
  	DISABLED_DATE 					DATE 				NULL
);
CREATE TABLE PAYMENT_ASSIGNED_AUDIT (
	ID_PAYMENT_ASSIGNED_AUDIT		INTEGER 			NOT NULL,
	ID_PAYMENT_ASSIGNED				INTEGER 			NOT NULL,
	DESCRIPTION						VARCHAR2(250) 		NULL,
	OLD_VALUE						VARCHAR2(1000) 		NULL,
	NEW_VALUE						VARCHAR2(1000) 		NULL,
	CREATED_DATE 					DATE 				NOT NULL,
	CREATED_BY   					VARCHAR2(50) 		NOT NULL
);
CREATE TABLE PAYMENT_PALETTE_GROUP (
	ID_PAYMENT_PALETTE				INTEGER				NOT NULL,
	ID_PAYMENT_GROUP				INTEGER				NOT NULL,
	CREATED_DATE 					DATE 				NOT NULL,
    CREATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL
);
CREATE TABLE PAYMENT_GROUP_METHOD (
	ID_PAYMENT_GROUP				INTEGER				NOT NULL,
	ID_PAYMENT_METHOD				INTEGER				NOT NULL,
	CREATED_DATE 					DATE 				NOT NULL,
    CREATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL
);
CREATE TABLE PAYMENT_RETURNED	(
	ID_PAYMENT_METHOD				INTEGER				NOT NULL,
	ID_PAYMENT_RETURN_METHOD		INTEGER				NOT NULL,
	CREATED_DATE 					DATE 				NOT NULL,
    CREATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL,
    UPDATED_DATE 					DATE 				NOT NULL,
    UPDATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL,
    DISABLED 	   					CHAR(1) 			DEFAULT 0,
  	DISABLED_DATE 					DATE 				NULL
);
CREATE TABLE COST_CODE (
	ID_COST_CODE					INTEGER				NOT NULL,
	COST_CODE						INTEGER				NOT NULL,
	DESCRIPTION						VARCHAR2(50 CHAR) 	NOT NULL,
	CREATED_DATE 					DATE 				NOT NULL,
    CREATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL,
    UPDATED_DATE 					DATE 				NOT NULL,
    UPDATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL,
    DISABLED 	   					CHAR(1) 			DEFAULT 0,
  	DISABLED_DATE 					DATE 				NULL
);
CREATE TABLE COST_CODE_AUDIT (
	ID_COST_CODE_AUDIT				INTEGER 			NOT NULL,
	ID_COST_CODE					INTEGER 			NOT NULL,
	DESCRIPTION						VARCHAR2(250) 		NULL,
	OLD_VALUE						VARCHAR2(1000) 		NULL,
	NEW_VALUE						VARCHAR2(1000) 		NULL,
	CREATED_DATE 					DATE 				NOT NULL,
	CREATED_BY   					VARCHAR2(50) 		NOT NULL
);
CREATE TABLE COMPANY (
	ID_COMPANY						INTEGER				NOT NULL,
	COMPANY_CODE					VARCHAR2(2) 		NOT NULL,
	COMPANY_NAME					VARCHAR2(50 CHAR) 	NOT NULL,
	CREATED_DATE 					DATE 				NOT NULL,
    CREATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL,
    UPDATED_DATE 					DATE 				NOT NULL,
    UPDATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL,
    DISABLED 	   					CHAR(1) 			DEFAULT 0,
  	DISABLED_DATE 					DATE 				NULL
);
CREATE TABLE COMPANY_AUDIT (
	ID_COMPANY_AUDIT				INTEGER 			NOT NULL,
	ID_COMPANY						INTEGER 			NOT NULL,
	DESCRIPTION						VARCHAR2(250) 		NULL,
	OLD_VALUE						VARCHAR2(1000) 		NULL,
	NEW_VALUE						VARCHAR2(1000) 		NULL,
	CREATED_DATE 					DATE 				NOT NULL,
	CREATED_BY   					VARCHAR2(50) 		NOT NULL
);
CREATE TABLE STORE_COST_CENTER (
	ID_STORE_COST_CENTER			INTEGER				NOT NULL,
	ID_COST_CODE					INTEGER				NOT NULL,
	ID_COMPANY						INTEGER				NOT NULL,
	STORE_NUMBER					INTEGER				NOT NULL,
	STORE_COST_CENTER				VARCHAR2(50 CHAR) 	NOT NULL,
	CREATED_DATE 					DATE 				NOT NULL,
    CREATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL,
    UPDATED_DATE 					DATE 				NOT NULL,
    UPDATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL,
	DISABLED 	   					CHAR(1) 			DEFAULT 0,
  	DISABLED_DATE 					DATE 				NULL,
  	ACCOUNTING_LINK_TYPE_ID 		NUMBER(10) 			DEFAULT 1
);
CREATE TABLE STORE_COST_CENTER_AUDIT (
	ID_STORE_COST_CENTER_AUDIT		INTEGER 			NOT NULL,
	ID_STORE_COST_CENTER			VARCHAR2(2) 		NOT NULL,
	DESCRIPTION						VARCHAR2(250) 		NULL,
	OLD_VALUE						VARCHAR2(1000) 		NULL,
	NEW_VALUE						VARCHAR2(1000) 		NULL,
	CREATED_DATE 					DATE 				NOT NULL,
	CREATED_BY   					VARCHAR2(50) 		NOT NULL
);
CREATE TABLE STORE_HISTORY (
	ID_STORE_HISTORY				INTEGER 			NOT NULL,
	LOADING_DATE					DATE				NOT NULL,
	TPH_DATE						DATE				NOT NULL,
	ID_AREA							INTEGER 			NOT NULL,
	ID_REGION 						INTEGER 			NOT NULL,
	ID_CANAL 						INTEGER 			NOT NULL,
	ID_STORE						INTEGER 			NULL,
	STORE_NUMBER 					NUMBER(10) 			NOT NULL,
	ID_STORE_FAMILY 				INTEGER 			NULL
);
CREATE TABLE STORE_IP_TMP (
    ID								NUMBER (10) 		NOT NULL ,
    STORE_NUMBER					NUMBER (10) 		NOT NULL ,
    IP								VARCHAR2 (50 CHAR) 	NOT NULL ,
    UPDATED_DATE   					DATE 				NULL ,
    UPDATED_BY     					VARCHAR2 (50 CHAR) 	NULL ,
    CREATED_DATE   					DATE 				NOT NULL ,
    CREATED_BY     					VARCHAR2 (50 CHAR) 	NOT NULL
);
CREATE TABLE STORE_IP_TMP_AUDIT (
    ID								NUMBER (10) 		NOT NULL ,
    STORE_NUMBER					NUMBER (10) 		NOT NULL ,
    IP								VARCHAR2 (50 CHAR) 	NOT NULL ,
    CREATED_DATE   					DATE 				NOT NULL ,
    CREATED_BY     					VARCHAR2 (50 CHAR) 	NOT NULL
);
CREATE TABLE ERC_SERVICE (
    ID_ERC_SERVICE        			INTEGER 			NOT NULL,
    ERC_SERVICE            			VARCHAR2(15) 		NOT NULL,
    DESCRIPTION            			VARCHAR2(250) 		NOT NULL
);
CREATE TABLE STORE_ERC (
	ID_STORE_ERC           			INTEGER 			NOT NULL,
	ID_STORE               			INTEGER 			NOT NULL,
	LANGUAGE_LIST	          		VARCHAR2(255)		NULL,
	NEAR_CPS              			VARCHAR2(2000) 		NOT NULL,
	MOBILE_BRANDS        			VARCHAR2(255) 		NOT NULL,
	TABLET_BRANDS       			VARCHAR2(255) 		NOT NULL,
	TEMPORAL_CLOSURE      			NUMBER(1,0) 		NOT NULL,
	APPOINTMENT						NUMBER(1,0) 		DEFAULT 0,
	ID_AGENDA              			VARCHAR2(15) 		NOT NULL,
	ID_ERC_SERVICE            		INTEGER 			NOT NULL,
	VERBIO_COMMERCIAL_CENTER 		VARCHAR2(255) 		NOT NULL,
	VERBIO_ADDRESS         			VARCHAR2(255) 		NOT NULL,
	IND_BAUL_ERC					NUMBER(1,0) 		NULL,
	GD_HABILITADO					NUMBER(1,0) 		NULL,
	ASC_CODE        				NUMBER(10)			NULL,
	WARRANTY_ASCCODE  				NUMBER(10)			NULL,	
	ENVIO_WEB						NUMBER(1)			NULL,
	UPDATED_DATE   					DATE 				NULL,
    UPDATED_BY     					VARCHAR2 (50 CHAR) 	NULL,
    CREATED_DATE   					DATE 				NOT NULL,
    CREATED_BY     					VARCHAR2 (50 CHAR) 	NOT NULL
);
CREATE TABLE STORE_TIPOLOGIA (
	ID_TIPOLOGIA					INTEGER 			NOT NULL,
	TIPOLOGIA						VARCHAR2(255)		NULL
);
CREATE TABLE STORE_ATTRIBUTE(
	ID_ATTRIBUTE					INTEGER 			NOT NULL,
	ATTRIBUTE						VARCHAR2(50)		NOT NULL,
	DESCRIPTION						VARCHAR2(255)		NOT NULL,
	UPDATED_DATE   					DATE 				NULL,
    UPDATED_BY     					VARCHAR2 (50 CHAR) 	NULL,
    CREATED_DATE   					DATE 				NOT NULL,
    CREATED_BY     					VARCHAR2 (50 CHAR) 	NOT NULL,
    DISABLED 	   					CHAR(1) DEFAULT 0,
  	DISABLED_DATE 					DATE 				NULL
);
CREATE TABLE STORE_ATTRIBUTE_RELATION(
	ID_ATTRIBUTE_RELATION			INTEGER 			NOT NULL,
	ID_ATTRIBUTE					INTEGER 			NOT NULL,
	ID_STORE						INTEGER 			NOT NULL,
	VALOR							VARCHAR2(255)		NOT NULL,
	UPDATED_DATE   					DATE 				NULL,
    UPDATED_BY     					VARCHAR2 (50 CHAR) 	NULL,
    CREATED_DATE   					DATE 				NOT NULL,
    CREATED_BY     					VARCHAR2 (50 CHAR) 	NOT NULL,
    DISABLED 	   					CHAR(1) DEFAULT 0,
  	DISABLED_DATE 					DATE 				NULL
);


CREATE TABLE STORE_SAT(
	ID 								NUMBER(8) 			NOT NULL,
	ID_STORE 						NUMBER(8) 			NOT NULL,
	STORE_NUMBER 					NUMBER(8) 			NOT NULL,
	ID_ERC 							NUMBER(8),
	STORE_NUMBER_NODO 				NUMBER(8),
	CREATED_DATE 					TIMESTAMP(6) 		NOT NULL,
	CREATED_BY 						VARCHAR2(50) 		NOT NULL,
	UPDATED_DATE 					TIMESTAMP(6)		NULL,
	UPDATED_BY 						VARCHAR(50) 		NULL
);

CREATE TABLE ACCOUNTING_LINK_TYPE (
	ID 								NUMBER(10) 			NOT NULL,
	CODE 							VARCHAR2(40) 		NOT NULL,
	DESCRIPTION 					VARCHAR2(40) 		NULL,
	CREATED_DATE 					DATE 				NOT NULL,
	CREATED_BY 						VARCHAR2(50 CHAR) 	NOT NULL,
	UPDATED_DATE 					DATE ,
	UPDATED_BY 						VARCHAR2(50 CHAR) 		
);

CREATE TABLE STORE_SAT_AUDIT(
	ID_STORE_SAT_AUDIT 				NUMBER(38,0)		NOT NULL,
	ID_STORE 						NUMBER(38,0)		NOT NULL,
	DESCRIPTION 					VARCHAR2(250 BYTE)	NULL,
	OLD_VALUE 						VARCHAR2(1000 BYTE)	NULL,
	NEW_VALUE 						VARCHAR2(1000 BYTE)	NULL,
	CREATED_DATE 					DATE				NOT NULL,
	CREATED_BY 						VARCHAR2(50 BYTE)	NOT NULL
);

ALTER TABLE PERSONA 					ADD CONSTRAINT PERSONA_PF 							PRIMARY KEY (ID_PERSONA);
ALTER TABLE AUTONOMOUS_REGION 			ADD CONSTRAINT AUTONOMOUS_REGION_PK 				PRIMARY KEY (ID_AUTONOMOUS_REGION);
ALTER TABLE PROVINCE 					ADD CONSTRAINT PROVINCES_PK 						PRIMARY KEY (ID_PROVINCE);
ALTER TABLE ROAD_TYPE 					ADD CONSTRAINT ROAD_TYPE_PK 						PRIMARY KEY (ID_ROAD_TYPE);
ALTER TABLE CIF 						ADD CONSTRAINT PK_CIF 								PRIMARY KEY (ID_CIF);
ALTER TABLE CIF_AUDIT 					ADD CONSTRAINT CIF_AUDIT_PK 						PRIMARY KEY (ID_CIF_AUDIT);
ALTER TABLE CANAL 						ADD CONSTRAINT CANAL_PK 							PRIMARY KEY (ID_CANAL);
ALTER TABLE REGION 						ADD CONSTRAINT REGION_PK 							PRIMARY KEY (ID_REGION);
ALTER TABLE AREA 						ADD CONSTRAINT AREA_PK 								PRIMARY KEY (ID_AREA);
ALTER TABLE STORE_IP 					ADD CONSTRAINT PK_STORE_IP 							PRIMARY KEY (ID);
ALTER TABLE STORE_IP_AUDIT 				ADD CONSTRAINT STORE_IP_AUDIT_PK 					PRIMARY KEY (ID);
ALTER TABLE STORE						ADD CONSTRAINT PK_ID_STORE 							PRIMARY KEY (ID_STORE);
ALTER TABLE REASON_TEMPORARY_CLOSURE 	ADD CONSTRAINT REASON_TEMPORARY_CLOSURE_PK  		PRIMARY KEY (ID_REASON_TEMPORARY_CLOSURE);
ALTER TABLE STORE_FAMILY 				ADD CONSTRAINT PK_ID_STORE_FAMILY 					PRIMARY KEY (ID_STORE_FAMILY);
ALTER TABLE STORE_ANNEX 				ADD CONSTRAINT PK_ID_STORE_ANNEX 					PRIMARY KEY (ID_STORE_ANNEX);
ALTER TABLE STORE_LOGISTIC 				ADD CONSTRAINT STORE_LOGISTIC_PK 					PRIMARY KEY (ID_LOGISTIC_DATA);
ALTER TABLE OPERADOR_LOGISTICO 			ADD CONSTRAINT OPERADOR_LOGISTICO_PK 				PRIMARY KEY (ID_OPERADOR_LOGISTICO);
ALTER TABLE TIPO_CATALOGO 				ADD CONSTRAINT TIPO_CATALOGO_PK 					PRIMARY KEY (ID_TIPO_CATALOGO);
ALTER TABLE TIPOLOGIA_LOGISTICA 		ADD CONSTRAINT TIPOLOGIA_LOGISTICA_PK 				PRIMARY KEY (ID_TIPOLOGIA_LOGISTICA);
ALTER TABLE TIPO_RECOGIDA 				ADD CONSTRAINT TIPO_RECOGIDA_PK 					PRIMARY KEY (ID_TIPO_RECOGIDA);
ALTER TABLE RECOGIDA_ESPECIAL 			ADD CONSTRAINT RECOGIDA_ESPECIAL_PK					PRIMARY KEY (ID_RECOGIDA_ESPECIAL);
ALTER TABLE RUTA_LOGISTICA 				ADD CONSTRAINT RUTA_LOGISTICA_PK 					PRIMARY KEY (ID_RUTA_LOGISTICA);
ALTER TABLE STORE_GPS 					ADD CONSTRAINT STORE_GPS_PK 						PRIMARY KEY (ID_STORE_GPS);
ALTER TABLE STORE_GPS_AUDIT 			ADD CONSTRAINT STORE_GPS_AUDIT_PK 					PRIMARY KEY (ID_STORE_GPS_AUDIT);
ALTER TABLE STORE_FRANCHISES 			ADD CONSTRAINT STORE_FRANCHISES_STORE_PK 			PRIMARY KEY (ID_FRANCHISES_DATA);
ALTER TABLE STORE_FRANCHISES_AUDIT 		ADD CONSTRAINT STORE_FRANCHISES_AUDIT_STORE_PK 		PRIMARY KEY (ID_FRANCHISES_DATA_AUDIT);
ALTER TABLE STORE_SCHEDULER 			ADD CONSTRAINT STORE_SCHEDULER_PK					PRIMARY KEY (ID_SCHEDULER);
ALTER TABLE STORE_SCHEDULER_AUDIT 		ADD CONSTRAINT STORE_SCHEDULER_AUDIT_STORE_PK 		PRIMARY KEY (ID_STORE_SCHEDULER_AUDIT);
ALTER TABLE STORE_SYS_DEVICE_TYPE 		ADD CONSTRAINT PK_STORE_SYS_DEVICE_TYPE 			PRIMARY KEY (ID);
ALTER TABLE STORE_SYS_DEVICE 			ADD CONSTRAINT PK_STORE_SYS_DEVICE 					PRIMARY KEY (ID);
ALTER TABLE PAYMENT_METHOD 				ADD CONSTRAINT PAYMENT_METHOD_PF 					PRIMARY KEY (ID_PAYMENT_METHOD);
ALTER TABLE PAYMENT_GROUP 				ADD CONSTRAINT PAYMENT_GROUP_PF 					PRIMARY KEY (ID_PAYMENT_GROUP);
ALTER TABLE PAYMENT_PALETTE 			ADD CONSTRAINT PAYMENT_PALETTE_PF 					PRIMARY KEY (ID_PAYMENT_PALETTE);
ALTER TABLE PAYMENT_ASSIGNED 			ADD CONSTRAINT PAYMENT_ASSIGNED_PF 					PRIMARY KEY (ID_PAYMENT_ASSIGNED);
ALTER TABLE PAYMENT_ASSIGNED_AUDIT 		ADD CONSTRAINT PAYMENT_ASSIGNED_AUDIT_PK 			PRIMARY KEY (ID_PAYMENT_ASSIGNED_AUDIT);
ALTER TABLE PAYMENT_PALETTE_GROUP 		ADD CONSTRAINT ID_PAYMENT_PALETTE_GROUP_PK 			PRIMARY KEY (ID_PAYMENT_PALETTE, ID_PAYMENT_GROUP);
ALTER TABLE PAYMENT_GROUP_METHOD 		ADD CONSTRAINT ID_PAYMENT_GROUP_METHOD_PK 			PRIMARY KEY (ID_PAYMENT_GROUP, ID_PAYMENT_METHOD);
ALTER TABLE PAYMENT_RETURNED			ADD CONSTRAINT PAYMENT_RETURNED_PF					PRIMARY KEY (ID_PAYMENT_METHOD, ID_PAYMENT_RETURN_METHOD);
ALTER TABLE COST_CODE 					ADD CONSTRAINT COST_CODE_PK 						PRIMARY KEY (ID_COST_CODE);
ALTER TABLE COST_CODE_AUDIT 			ADD CONSTRAINT COST_CODE_AUDIT_PK 					PRIMARY KEY (ID_COST_CODE_AUDIT);
ALTER TABLE COMPANY 					ADD CONSTRAINT COMPANY_PK 							PRIMARY KEY (ID_COMPANY);
ALTER TABLE COMPANY_AUDIT 				ADD CONSTRAINT COMPANY_AUDIT_PK 					PRIMARY KEY (ID_COMPANY_AUDIT);
ALTER TABLE STORE_COST_CENTER 			ADD CONSTRAINT STORE_COST_CENTER_PK 				PRIMARY KEY (ID_STORE_COST_CENTER);
ALTER TABLE STORE_COST_CENTER_AUDIT 	ADD CONSTRAINT STORE_COST_CENTER_AUDIT_PK 			PRIMARY KEY (ID_STORE_COST_CENTER_AUDIT);
ALTER TABLE STORE_HISTORY 				ADD CONSTRAINT STORE_HISTORY_PK 					PRIMARY KEY (ID_STORE_HISTORY);
ALTER TABLE STORE_IP_TMP 				ADD CONSTRAINT STORE_IP_TMP_PK 						PRIMARY KEY (ID);
ALTER TABLE STORE_IP_TMP_AUDIT 			ADD CONSTRAINT STORE_IP_TMP_AUDIT_PK 				PRIMARY KEY (ID);
ALTER TABLE ERC_SERVICE					ADD CONSTRAINT ERC_SERVICE_PK 						PRIMARY KEY (ID_ERC_SERVICE);
ALTER TABLE STORE_ERC					ADD CONSTRAINT STORE_ERC_PK 						PRIMARY KEY (ID_STORE_ERC);
ALTER TABLE PAYMENT_ACCOUNT_TYPE 		ADD CONSTRAINT PAYMENT_ACCOUNT_TYPE_PK 				PRIMARY KEY (ID_PAYMENT_ACCOUNT_TYPE);
ALTER TABLE STORE_TIPOLOGIA 			ADD CONSTRAINT STORE_TIPOLOGIA_PK 					PRIMARY KEY (ID_TIPOLOGIA);
ALTER TABLE STORE_ATTRIBUTE 			ADD CONSTRAINT STORE_ATTRIBUTE_PK 					PRIMARY KEY (ID_ATTRIBUTE);
ALTER TABLE STORE_ATTRIBUTE_RELATION 	ADD CONSTRAINT STORE_ATTRIBUTE_RELATION_PK			PRIMARY KEY (ID_ATTRIBUTE_RELATION);
ALTER TABLE STORE_SAT 					ADD CONSTRAINT STORE_SAT_PK 						PRIMARY KEY (ID);
ALTER TABLE ACCOUNTING_LINK_TYPE 		ADD CONSTRAINT PK_ACCOUNTING_LINK_TYPE 				PRIMARY KEY (ID);
ALTER TABLE STORE_SAT_AUDIT 			ADD CONSTRAINT STORE_SAT_AUDIT_PK 					PRIMARY KEY (ID_STORE_SAT_AUDIT);


ALTER TABLE PERSONA   					ADD CONSTRAINT UQ_NAME_PERSONA 						UNIQUE (USUARIO);
ALTER TABLE CIF 	  					ADD CONSTRAINT UQ_CIF 								UNIQUE (CIF);
ALTER TABLE CANAL 	  					ADD CONSTRAINT UQ_NAME_CANAL 	 					UNIQUE (CANAL); 
ALTER TABLE REGION 	  					ADD CONSTRAINT UQ_NAME_REGION 						UNIQUE (REGION);
ALTER TABLE AREA 	  					ADD CONSTRAINT UQ_NAME_AREA 						UNIQUE (AREA);
ALTER TABLE STORE_IP  					ADD CONSTRAINT UQ_STORE_IP 							UNIQUE (IP);
ALTER TABLE STORE_LOGISTIC   			ADD CONSTRAINT UQ_STORE_LOGISTIC					UNIQUE (ID_STORE);
ALTER TABLE STORE			 			ADD CONSTRAINT UQ_STORE_NUMBER 						UNIQUE (STORE_NUMBER);
ALTER TABLE STORE_ANNEX 				ADD CONSTRAINT UQ_STORE_ANNEX_NUMBER 				UNIQUE (STORE_NUMBER);
ALTER TABLE STORE_GPS		 			ADD CONSTRAINT UQ_STORE_GPS		 					UNIQUE (STORE_NUMBER);
ALTER TABLE STORE_FRANCHISES 			ADD CONSTRAINT UQ_STORE_FRANCHISES 					UNIQUE (STORE_NUMBER);
ALTER TABLE STORE_SCHEDULER   			ADD CONSTRAINT UQ_STORE_SCHEDULER 					UNIQUE (STORE_NUMBER);
ALTER TABLE STORE_SYS_DEVICE_TYPE 		ADD CONSTRAINT UQ_STORE_SYS_DEVICE_TYPE_NAME		UNIQUE (NAME);
ALTER TABLE PAYMENT_METHOD	  			ADD CONSTRAINT UQ_PAYMENT_METHOD 					UNIQUE (PAYMENT_METHOD);
ALTER TABLE PAYMENT_GROUP	  			ADD CONSTRAINT UQ_PAYMENT_GROUP 					UNIQUE (PAYMENT_GROUP);
ALTER TABLE PAYMENT_PALETTE 	  		ADD CONSTRAINT UQ_PAYMENT_PALETTE 					UNIQUE (PAYMENT_PALETTE);
ALTER TABLE PAYMENT_ASSIGNED 			ADD CONSTRAINT UQ_PAYMENT_ASSIGNED 					UNIQUE (ID_STORE,ID_PAYMENT_PALETTE);
ALTER TABLE STORE_IP_TMP 				ADD CONSTRAINT UQ_IP_STORE_TMP_IP 					UNIQUE (IP);
ALTER TABLE ERC_SERVICE 				ADD CONSTRAINT UQ_ERC_SERVICE 						UNIQUE (ERC_SERVICE);
ALTER TABLE STORE_ATTRIBUTE 			ADD CONSTRAINT UQ_ATTRIBUTE 						UNIQUE (ATTRIBUTE);
ALTER TABLE STORE_SAT 					ADD CONSTRAINT UQ_STORE_NAME_STORE_SAT 				UNIQUE (STORE_NUMBER);


ALTER TABLE PROVINCE  					ADD CONSTRAINT PROVINCE_AUTONOMOUS_REGION_FK 		FOREIGN KEY (ID_AUTONOMOUS_REGION) 	 		REFERENCES AUTONOMOUS_REGION(ID_AUTONOMOUS_REGION);
ALTER TABLE CIF 	  					ADD CONSTRAINT CIF_ROAD_TYPE_FK 					FOREIGN KEY (ID_ROAD_TYPE)		   	 		REFERENCES ROAD_TYPE(ID_ROAD_TYPE);
ALTER TABLE CIF 	  					ADD CONSTRAINT CIF_PROVINCE_FK 						FOREIGN KEY (ID_PROVINCE) 			 		REFERENCES PROVINCE(ID_PROVINCE);
ALTER TABLE CIF_AUDIT 					ADD CONSTRAINT CIF_AUDIT_CIF_FK 					FOREIGN KEY (CIF_ID) 				 		REFERENCES CIF(CIF);
ALTER TABLE REGION 	  					ADD CONSTRAINT REGION_CANAL_FK 						FOREIGN KEY (ID_CANAL) 				 		REFERENCES CANAL(ID_CANAL);
ALTER TABLE AREA 	  					ADD CONSTRAINT AREA_REGION_FK 						FOREIGN KEY (ID_REGION) 			 		REFERENCES REGION(ID_REGION);
ALTER TABLE AREA 	  					ADD CONSTRAINT ID_MANAGER_AREA_PERSONA_FK 			FOREIGN KEY (ID_MANAGER_AREA) 		 		REFERENCES PERSONA (USUARIO);
ALTER TABLE AREA 	  					ADD CONSTRAINT ID_AUDITOR_AREA_PERSONA_FK 			FOREIGN KEY (ID_AUDITOR_AREA) 		 		REFERENCES PERSONA (USUARIO);
ALTER TABLE STORE_IP_AUDIT 				ADD CONSTRAINT FK_STORE_IP_AUDIT_STORE_IP	 		FOREIGN KEY (STORE_IP_ID) 			 		REFERENCES STORE_IP (ID);
ALTER TABLE STORE 						ADD CONSTRAINT STORE_CIF_FK 						FOREIGN KEY (ID_CIF) 				 		REFERENCES CIF (ID_CIF);
ALTER TABLE STORE 						ADD CONSTRAINT STORE_AREA_FK 						FOREIGN KEY (ID_AREA) 				 		REFERENCES AREA (ID_AREA);
ALTER TABLE STORE 						ADD CONSTRAINT STORE_PERSONA_FK 					FOREIGN KEY (ID_STORE_MANAGER)		 		REFERENCES PERSONA (USUARIO);
ALTER TABLE STORE 						ADD CONSTRAINT STORE_PROVINCE_FK 					FOREIGN KEY (ID_PROVINCE) 			 		REFERENCES PROVINCE(ID_PROVINCE);
ALTER TABLE STORE						ADD CONSTRAINT STORE_TIPOLOGIA_FK			 		FOREIGN KEY (ID_TIPOLOGIA)					REFERENCES STORE_TIPOLOGIA (ID_TIPOLOGIA);
ALTER TABLE STORE_ANNEX 				ADD CONSTRAINT STORE_ANNEX_STORE_FK 				FOREIGN KEY (STORE_NUMBER) 			 		REFERENCES STORE (STORE_NUMBER);
ALTER TABLE STORE_ANNEX 				ADD CONSTRAINT ID_COORDINATOR_PERSONA_FK 			FOREIGN KEY (ID_COORDINATOR) 		 		REFERENCES PERSONA (USUARIO);
ALTER TABLE STORE_ANNEX 				ADD CONSTRAINT ID_AREA_MANAGER_PERSONA_FK 			FOREIGN KEY (ID_AREA_MANAGER) 		 		REFERENCES PERSONA (USUARIO);
ALTER TABLE STORE_ANNEX 				ADD CONSTRAINT ID_AUDITOR_PERSONA_FK 				FOREIGN KEY (ID_AUDITOR) 			 		REFERENCES PERSONA (USUARIO);
ALTER TABLE STORE_ANNEX 				ADD CONSTRAINT STORE_ANNEX_STORE_FAMILY_FK			FOREIGN KEY (ID_STORE_FAMILY) 		 		REFERENCES STORE_FAMILY (ID_STORE_FAMILY);
ALTER TABLE STORE_ANNEX					ADD CONSTRAINT STORE_ANNEX_REASON_CLOSED_FK			FOREIGN KEY (ID_REASON_TEMP_CLOSURE) 		REFERENCES REASON_TEMPORARY_CLOSURE (ID_REASON_TEMPORARY_CLOSURE);
ALTER TABLE STORE_GPS 					ADD CONSTRAINT STORE_GPS_STORE_FK 					FOREIGN KEY (STORE_NUMBER) 			 		REFERENCES STORE (STORE_NUMBER);
ALTER TABLE STORE_GPS_AUDIT				ADD CONSTRAINT STORE_GPS_AUDIT_STORE_FK 			FOREIGN KEY (ID_STORE_GPS) 			 		REFERENCES STORE_GPS (ID_STORE_GPS);
ALTER TABLE STORE_LOGISTIC 				ADD CONSTRAINT LD_STORE_ID_FK 						FOREIGN KEY (ID_STORE) 				 		REFERENCES STORE (STORE_NUMBER);
ALTER TABLE STORE_LOGISTIC 				ADD CONSTRAINT LD_PROVINCE_ID_FK 					FOREIGN KEY (ID_PROVINCE) 			 		REFERENCES PROVINCE (ID_PROVINCE);
ALTER TABLE STORE_LOGISTIC 				ADD CONSTRAINT LD_OPERADOR_LOGISTICO_FK 			FOREIGN KEY (ID_OPERADOR_LOGISTICO)  		REFERENCES OPERADOR_LOGISTICO (ID_OPERADOR_LOGISTICO);
ALTER TABLE STORE_LOGISTIC 				ADD CONSTRAINT LD_TIPO_CATALOGO_FK 					FOREIGN KEY (ID_TIPO_CATALOGO) 		 		REFERENCES TIPO_CATALOGO (ID_TIPO_CATALOGO);
ALTER TABLE STORE_LOGISTIC 				ADD CONSTRAINT LD_TIPOLOGIA_LOGISTICA_FK 			FOREIGN KEY (ID_TIPOLOGIA_LOGISTICA) 		REFERENCES TIPOLOGIA_LOGISTICA (ID_TIPOLOGIA_LOGISTICA);
ALTER TABLE STORE_LOGISTIC 				ADD CONSTRAINT LD_TIPO_RECOGIDA_FK 					FOREIGN KEY (ID_TIPO_RECOGIDA) 		 		REFERENCES TIPO_RECOGIDA (ID_TIPO_RECOGIDA);
ALTER TABLE STORE_LOGISTIC 				ADD CONSTRAINT LD_RECOGIDA_ESPECIAL_FK 				FOREIGN KEY (ID_RECOGIDA_ESPECIAL) 	 		REFERENCES RECOGIDA_ESPECIAL (ID_RECOGIDA_ESPECIAL);
ALTER TABLE STORE_LOGISTIC 				ADD CONSTRAINT LD_OP_LOGISTICO_ESPECIAL_FK 			FOREIGN KEY (ID_RUTA_LOGISTICA)      		REFERENCES OPERADOR_LOGISTICO (ID_OPERADOR_LOGISTICO);
ALTER TABLE STORE_FRANCHISES 			ADD CONSTRAINT FRANCHISES_DATA_STORE_FK 			FOREIGN KEY (STORE_NUMBER) 			 		REFERENCES STORE (STORE_NUMBER);
ALTER TABLE STORE_FRANCHISES_AUDIT 		ADD CONSTRAINT FRANCHISES_DATA_AUDIT_STORE_FK 		FOREIGN KEY (ID_FRANCHISES_DATA) 	 		REFERENCES STORE_FRANCHISES (ID_FRANCHISES_DATA);
ALTER TABLE STORE_SCHEDULER 			ADD CONSTRAINT SS_STORE_ID_FK 						FOREIGN KEY (STORE_NUMBER) 			 		REFERENCES STORE (STORE_NUMBER);
ALTER TABLE STORE_SCHEDULER_AUDIT 		ADD CONSTRAINT SS_DATA_AUDIT_STORE_FK 		    	FOREIGN KEY (ID_SCHEDULER) 			 		REFERENCES STORE_SCHEDULER (ID_SCHEDULER);
ALTER TABLE STORE_SYS_DEVICE 			ADD CONSTRAINT FK_STORE_SYS_DEVICE_ST_NUMBER 		FOREIGN KEY (STORE_NUMBER) 			 		REFERENCES STORE (STORE_NUMBER);
ALTER TABLE STORE_SYS_DEVICE 			ADD CONSTRAINT FK_STORE_SYS_DEVICE_TYPE 			FOREIGN KEY (TYPE_ID) 				 		REFERENCES STORE_SYS_DEVICE_TYPE (ID);
ALTER TABLE PAYMENT_ASSIGNED			ADD CONSTRAINT PAYMENT_ASSIGNED_PALETTE_FK  		FOREIGN KEY (ID_PAYMENT_PALETTE)     		REFERENCES PAYMENT_PALETTE(ID_PAYMENT_PALETTE);
ALTER TABLE PAYMENT_ASSIGNED			ADD CONSTRAINT STORE_PALETTE_ASSIGNED_FK 			FOREIGN KEY (ID_STORE)				 		REFERENCES STORE(STORE_NUMBER);
ALTER TABLE PAYMENT_GROUP_METHOD		ADD CONSTRAINT PAYMENT_METHOD_GROUP_FK 				FOREIGN KEY (ID_PAYMENT_GROUP)		 		REFERENCES PAYMENT_GROUP(ID_PAYMENT_GROUP);
ALTER TABLE PAYMENT_GROUP_METHOD		ADD CONSTRAINT PAYMENT_GROUP_METHOD_FK 				FOREIGN KEY (ID_PAYMENT_METHOD)		 		REFERENCES PAYMENT_METHOD(ID_PAYMENT_METHOD);
ALTER TABLE PAYMENT_PALETTE_GROUP		ADD CONSTRAINT PAYMENT_PALETTE_GROUP_FK 			FOREIGN KEY (ID_PAYMENT_GROUP)	     		REFERENCES PAYMENT_GROUP(ID_PAYMENT_GROUP);
ALTER TABLE PAYMENT_PALETTE_GROUP		ADD CONSTRAINT PAYMENT_GROUP_PALETTE_FK 			FOREIGN KEY (ID_PAYMENT_PALETTE)	 		REFERENCES PAYMENT_PALETTE(ID_PAYMENT_PALETTE);
ALTER TABLE PAYMENT_RETURNED			ADD CONSTRAINT PAYMENT_RETURNED_FK					FOREIGN KEY (ID_PAYMENT_METHOD)		 		REFERENCES PAYMENT_METHOD(ID_PAYMENT_METHOD);
ALTER TABLE PAYMENT_RETURNED			ADD CONSTRAINT PAYMENT_RETURNED_METHOD_FK			FOREIGN KEY (ID_PAYMENT_RETURN_METHOD)		REFERENCES PAYMENT_METHOD(ID_PAYMENT_METHOD);
ALTER TABLE STORE_COST_CENTER 			ADD CONSTRAINT COST_STORE_COST_CENTER_FK 			FOREIGN KEY (ID_COMPANY) 		 	 		REFERENCES COMPANY (ID_COMPANY);
ALTER TABLE STORE_COST_CENTER 			ADD CONSTRAINT COMPANY_STORE_COST_CENTER_FK 		FOREIGN KEY (ID_COST_CODE) 	 	 	 		REFERENCES COST_CODE (ID_COST_CODE);
ALTER TABLE STORE_COST_CENTER 			ADD CONSTRAINT S_COST_STORE_NUMBER_FK 				FOREIGN KEY (STORE_NUMBER) 	     	 		REFERENCES STORE (STORE_NUMBER);
ALTER TABLE STORE_COST_CENTER 			ADD CONSTRAINT SCC_ACCOUNTING_LINK_TYPE_FK 			FOREIGN KEY (ACCOUNTING_LINK_TYPE_ID)		REFERENCES ACCOUNTING_LINK_TYPE (ID);
ALTER TABLE STORE_HISTORY 				ADD CONSTRAINT STORE_HISTORY_STORE_FK 				FOREIGN KEY (STORE_NUMBER) 	     	 		REFERENCES STORE (STORE_NUMBER);
ALTER TABLE STORE_IP_TMP 				ADD CONSTRAINT STORE_IP_TMP_FK_STORE_NUMBER 		FOREIGN KEY (STORE_NUMBER) 			 		REFERENCES STORE (STORE_NUMBER);
ALTER TABLE STORE_IP_TMP_AUDIT 			ADD CONSTRAINT STORE_IP_TMP_AUDIT_FK_S_NUMBER 		FOREIGN KEY (STORE_NUMBER) 			 		REFERENCES STORE (STORE_NUMBER);
ALTER TABLE STORE_ERC 					ADD CONSTRAINT STORE_ERC_STORE_NUMBER_FK 			FOREIGN KEY (ID_STORE) 			 			REFERENCES STORE (ID_STORE);
ALTER TABLE STORE_ERC				    ADD CONSTRAINT STORE_ERC_SERVICE_FK 				FOREIGN KEY (ID_ERC_SERVICE)				REFERENCES ERC_SERVICE	(ID_ERC_SERVICE);
ALTER TABLE PAYMENT_METHOD				ADD CONSTRAINT PAYMENT_METHOD_ACCOUNT_TYPE_FK 		FOREIGN KEY (ID_PAYMENT_ACCOUNT_TYPE)		REFERENCES PAYMENT_ACCOUNT_TYPE (ID_PAYMENT_ACCOUNT_TYPE);
ALTER TABLE STORE_ATTRIBUTE_RELATION 	ADD CONSTRAINT STORE_ATTRIBUTE_RELATION_FK 			FOREIGN KEY (ID_STORE) 			 			REFERENCES STORE (ID_STORE);
ALTER TABLE STORE_ATTRIBUTE_RELATION	ADD CONSTRAINT ATTRIBUTE_RELATION_FK 				FOREIGN KEY (ID_ATTRIBUTE)					REFERENCES STORE_ATTRIBUTE (ID_ATTRIBUTE);
ALTER TABLE STORE_SAT					ADD CONSTRAINT STORE_SAT_ID_STORE_FK 				FOREIGN KEY (ID_STORE) 						REFERENCES STORE (ID_STORE);
ALTER TABLE STORE_SAT 					ADD CONSTRAINT STORE_SAT_STORE_NUMBER_NODE_FK 		FOREIGN KEY (STORE_NUMBER_NODO) 			REFERENCES STORE (STORE_NUMBER);
ALTER TABLE STORE_SAT 					ADD CONSTRAINT STORE_SAT_ID_ERC_FK 					FOREIGN KEY (ID_ERC) 						REFERENCES STORE_ERC (ID_STORE_ERC);
ALTER TABLE STORE_SAT_AUDIT				ADD CONSTRAINT STORE_SAT_AUDIT_ID_STORE_FK 			FOREIGN KEY (ID_STORE) 						REFERENCES STORE (ID_STORE);